import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as c,c as d,b as e,e as n,d as s,w as i,a as t}from"./app-D1uezr0R.js";const p="/assets/true-image-20220830090744821--9iGGqrU.png",u="/assets/true-1625452569657-833e64b2-1403-4fb6-9ee3-1e166504ccf0-DBj6FutF.png",m="/assets/true-image-20211119152904883-DOP_H65X.png",b="/assets/true-image-20211119152923933-BsEtDeMI.png",k="/assets/true-image-20211119152942908-D-vWao89.png",v="/assets/true-1625452728905-e72041a2-cf1b-4b24-a327-7f0c3974a931-Bh7KHr5R.png",h="/assets/true-1626605698082-bf4351dd-6751-44b7-aaf7-7608c847ea42-Yyt1magu.png",g="/assets/true-image-20211119155506746-ildP2TBv.png",f="/assets/true-image-20211212160128007-B4w1NYN0.png",_="/assets/udocker-DQvlcoM9.jpg",y="/assets/true-image-20220827152630437-BcVx02lh.png",x={},E=e("p",null,"k8s 集群搭建，部署网络策略插件，可视化管理工具",-1),w={href:"https://www.kubernetes.org.cn/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://kubernetes.io/zh/docs/home/",target:"_blank",rel:"noopener noreferrer"},A={href:"http://docs.kubernetes.org.cn/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://feisky.gitbooks.io/kubernetes/content/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://kubernetes.io/releases/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/kubernetes/kubernetes/tree/master/CHANGELOG",target:"_blank",rel:"noopener noreferrer"},N=t('<p>配置SSH、配置k8s环境、安装docker、安装k8s、初始化k8s集群（加入节点）、网络插件fiannel、安装ingress负载均衡</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="一、概念" tabindex="-1"><a class="header-anchor" href="#一、概念"><span>一、概念</span></a></h2><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>传统部署时代</strong></p><p><strong>虚拟化部署时代</strong></p><p><strong>容器部署时代</strong></p><p>好处：</p><ul><li><strong>敏捷应用程序的创建和部署</strong>：与使用 VM 镜像相比，提高了容器镜像创建的简便性和效率。</li><li><strong>持续开发、集成和部署</strong>：通过快速简单的回滚(由于镜像不可变性)，提供可靠且频繁的容器镜像构建和部署。</li><li><strong>关注开发与运维的分离</strong>：在构建/发布时而不是在部署时创建应用程序容器镜像，从而将应用程序与基础架构分离。</li><li><strong>可观察性</strong>：不仅可以显示操作系统级别的信息和指标，还可以显示应用程序的运行状况和其他指标信号。</li><li><strong>跨开发、测试和生产的环境一致性</strong>：在便携式计算机上与在云中相同地运行。</li><li><strong>云和操作系统分发的可移植性</strong>：可在 Ubuntu、RHEL、CoreOS、本地、Google Kubernetes Engine 和其他任何地方运行。</li><li><strong>以应用程序为中心的管理</strong>：提高抽象级别，从在虚拟硬件上运行 OS 到使用逻辑资源在 OS 上运行应用程序。</li><li><strong>松散耦合、分布式、弹性、解放的微服务</strong>：应用程序被分解成较小的独立部分，并且可以动态部署和管理 - 而不是在一台大型单机上整体运行。</li><li><strong>资源隔离</strong>：可预测的应用程序性能。</li><li><strong>资源利用</strong>：高效率和高密度</li></ul>',9),O={id:"为什么需要-kubernetes-它能做什么",tabindex:"-1"},K={class:"header-anchor",href:"#为什么需要-kubernetes-它能做什么"},T={href:"https://v1-18.docs.kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81-kubernetes-%E5%AE%83%E8%83%BD%E5%81%9A%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"},D=t('<h3 id="简介-调度、自动修复、水平伸缩" tabindex="-1"><a class="header-anchor" href="#简介-调度、自动修复、水平伸缩"><span>简介：调度、自动修复、水平伸缩</span></a></h3><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="组件架构" tabindex="-1"><a class="header-anchor" href="#组件架构"><span>组件架构</span></a></h3><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="kube-apiserver" tabindex="-1"><a class="header-anchor" href="#kube-apiserver"><span>kube-apiserver</span></a></h4>',7),P={href:"https://kubernetes.io/zh/docs/reference/glossary/?all=true#term-control-plane",target:"_blank",rel:"noopener noreferrer"},j=e("h4",{id:"etcd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#etcd"},[e("span",null,"etcd")])],-1),B=e("p",null,"etcd 是兼具一致性和高可用性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。",-1),z=e("h4",{id:"kube-scheduler",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kube-scheduler"},[e("span",null,"kube-scheduler")])],-1),F={href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"},G=e("h4",{id:"kube-controller-manager",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kube-controller-manager"},[e("span",null,"kube-controller-manager")])],-1),M={href:"https://kubernetes.io/zh/docs/concepts/architecture/controller/",target:"_blank",rel:"noopener noreferrer"},H=t('<p>这些控制器包括:</p><ul><li><strong>节点控制器（Node Controller）</strong>: 负责在节点出现故障时进行通知和响应</li><li><strong>任务控制器（Job controller）</strong>: 监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成</li><li><strong>端点控制器（Endpoints Controller）</strong>: 填充端点(Endpoints)对象(即加入 Service 与 Pod)</li><li><strong>服务帐户和令牌控制器（Service Account &amp; Token Controllers）</strong>: 为新的命名空间创建默认帐户和 API 访问令牌</li></ul><h4 id="cloud-controller-manager" tabindex="-1"><a class="header-anchor" href="#cloud-controller-manager"><span>cloud-controller-manager</span></a></h4>',3),L={href:"https://kubernetes.io/zh/docs/reference/glossary/?all=true#term-control-plane",target:"_blank",rel:"noopener noreferrer"},U=t('<p>下面的控制器都包含对云平台驱动的依赖：</p><ul><li><strong>节点控制器（Node Controller）</strong>: 用于在节点终止响应后检查云提供商以确定节点是否已被删除</li><li><strong>路由控制器（Route Controller）</strong>: 用于在底层云基础架构中设置路由</li><li><strong>服务控制器（Service Controller）</strong>: 用于创建、更新和删除云提供商负载均衡器</li></ul><h3 id="node-组件" tabindex="-1"><a class="header-anchor" href="#node-组件"><span>Node 组件</span></a></h3><h4 id="kubelet" tabindex="-1"><a class="header-anchor" href="#kubelet"><span>kubelet</span></a></h4><p>一个在集群中每个节点（node）上运行的代理。 它保证容器containers都运行在 Pod 中。</p><h4 id="kube-proxy" tabindex="-1"><a class="header-anchor" href="#kube-proxy"><span>kube-proxy</span></a></h4><p>是集群中每个节点上运行的网络代理</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、集群安装-环境配置搭建" tabindex="-1"><a class="header-anchor" href="#二、集群安装-环境配置搭建"><span>二、集群安装+环境配置搭建</span></a></h2><h3 id="kubectl-快捷键-alias" tabindex="-1"><a class="header-anchor" href="#kubectl-快捷键-alias"><span>kubectl 快捷键（alias）</span></a></h3>',10),V={href:"https://blog.csdn.net/qq_42476834/article/details/117373828",target:"_blank",rel:"noopener noreferrer"},$=t(`<h3 id="部署步骤" tabindex="-1"><a class="header-anchor" href="#部署步骤"><span>部署步骤</span></a></h3><div class="language-ABAP line-numbers-mode" data-ext="ABAP" data-title="ABAP"><pre class="language-ABAP"><code>1.在所有节点上安装 Docker和 kubeadm
2.部署 Kubernetes Master
3.部署容器网络插件（Cilium、Calico、Flannel、Weave）
4.部署 Kubernetes Node，将节点加入 Kubernetes集群中
5.部署可视化管理工具-(KubeSphere、Rancher、Kuboard)
6.部署程序
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>对于集群相同的环境配置，可以使用 ansible 来统一配置机器</strong></p><figure><img src="`+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="环境准备k8s-init" tabindex="-1"><a class="header-anchor" href="#环境准备k8s-init"><span>环境准备k8s-init</span></a></h3><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装 net-tools 工具</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> net-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本机添加hosts：<code>C:\\Windows\\System32\\drivers\\etc</code></p><div class="language-yacas line-numbers-mode" data-ext="yacas" data-title="yacas"><pre class="language-yacas"><code>192.168.100.130 tomcat.k8s.com
192.168.100.130 nginx.k8s.com
# k8s-可视化管理工具-KubeSphere
192.168.100.130 ks.k8s.com
# k8s-可视化管理工具-Rancher
192.168.100.130 rc.k8s.com
# k8s-可视化管理工具-Kuboard
192.168.100.130 ka.k8s.com
# k8s-可视化管理工具-KubeOperator
192.168.100.130 ko.k8s.com
192.168.100.130 master
192.168.100.131 node1
192.168.100.132 node2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在每个主机上添加：<code>vim /etc/hosts</code></p><div class="language-yacas line-numbers-mode" data-ext="yacas" data-title="yacas"><pre class="language-yacas"><code>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.100.130 master
192.168.100.131 node1
192.168.100.132 node2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启网络服务：<code>service network restart</code></p><p><code>ping -c 3 master &amp;&amp; ping -c 3 node1 &amp;&amp; ping -c 3 node2</code></p><p>用户：<code>a</code>，密码：<code>123456a</code>， 设置主机名称：<code>hostnamectl set-hostname</code></p><h4 id="关闭防火墙" tabindex="-1"><a class="header-anchor" href="#关闭防火墙"><span>关闭防火墙</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>systemctl stop firewalld
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="禁用selinux" tabindex="-1"><a class="header-anchor" href="#禁用selinux"><span>禁用selinux</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span>

<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39;</span> /etc/selinux/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="禁用swap分区" tabindex="-1"><a class="header-anchor" href="#禁用swap分区"><span>禁用swap分区</span></a></h4><p>为了保证kubelet正常工作，k8s强制要求禁用，否则集群初始化失败。</p><p><strong>临时关闭</strong>：<code>swapoff -a</code></p><p><strong>永久关闭</strong>：<code>sed -ri &#39;s/.*swap.*/#&amp;/&#39; /etc/fstab</code></p><p>查看：<code>nano /etc/fstab</code>，<code>grep &quot;*.swap.*&quot; /etc/fstab</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/fstab</span>

<span class="token comment">#</span>
<span class="token comment"># /etc/fstab</span>
<span class="token comment"># Created by anaconda on Sat Mar  9 21:50:29 2024</span>
<span class="token comment">#</span>
<span class="token comment"># Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39;</span>
<span class="token comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span>
<span class="token comment">#</span>
/dev/mapper/centos-root /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>6e78f73f-f9c1-47ff-8a2e-27042e0cfaaf /boot                   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
/dev/mapper/centos-home /home                   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
/dev/mapper/centos-swap swap                    swap    defaults        <span class="token number">0</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把*/dev/mapper/centos-swap swap* 改为 <em>#/dev/mapper/centos-swap swap</em>，用**#**注释掉</p><h4 id="开启ipvs支持" tabindex="-1"><a class="header-anchor" href="#开启ipvs支持"><span>开启IPVS支持</span></a></h4><p><code>vim /etc/sysconfig/modules/ipvs.modules</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/sysconfig/modules/ipvs.modules</span>
#!/bin/bash
ipvs_modules=&quot;ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp nf_conntrack&quot;
for kernel_module in <span class="token variable">\${ipvs_modules}</span>; do
  /sbin/modinfo -F filename <span class="token variable">\${kernel_module}</span> &gt; /dev/null 2&gt;&amp;1
  if [ <span class="token variable">$?</span> -eq 0 ]; then
    /sbin/modprobe <span class="token variable">\${kernel_module}</span>
  fi
done
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x /etc/sysconfig/modules/ipvs.modules

<span class="token function">sh</span> /etc/sysconfig/modules/ipvs.modules

lsmod <span class="token operator">|</span> <span class="token function">grep</span> ip_vs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ipv4桥接流量传递配置" tabindex="-1"><a class="header-anchor" href="#ipv4桥接流量传递配置"><span>IPv4桥接流量传递配置</span></a></h4><p>将桥接的IPv4流量传递到iptables的链</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/modules-load.d/k8s.conf</span>
overlay
br_netfilter
EOF</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----&gt; modprobe overlay and br_netfilter&quot;</span>
modprobe overlay
modprobe br_netfilter

<span class="token comment"># cat /usr/lib/sysctl.d/00-system.conf 与之相同</span>
<span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/sysctl.d/k8s.conf</span>
# For binary values, 0 is disabled, 1 is enabled
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
vm.swappiness=0
EOF</span>

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----&gt; start iptables：[sysctl -p /etc/sysctl.d/k8s.conf]&quot;</span>
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span> /etc/sysctl.d/k8s.conf
<span class="token function">sysctl</span> <span class="token parameter variable">--system</span>
<span class="token comment">#校验</span>
lsmod <span class="token operator">|</span> <span class="token function">grep</span> br_netfilter
lsmod <span class="token operator">|</span> <span class="token function">grep</span> overlay
<span class="token function">sysctl</span> net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="network-security开启网络安全" tabindex="-1"><a class="header-anchor" href="#network-security开启网络安全"><span>network-security开启网络安全</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#修改/etc/sysctl.d/10-network-security.conf</span>
<span class="token comment">#与 /usr/lib/sysctl.d/50-default.conf 类似</span>
<span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/sysctl.d/10-network-security.conf</span>
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1
EOF</span>

<span class="token comment">#然后使之生效</span>
<span class="token function">sysctl</span> <span class="token parameter variable">--system</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="时间同步" tabindex="-1"><a class="header-anchor" href="#时间同步"><span>时间同步</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/run/yum.pid
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> chrony
systemctl <span class="token builtin class-name">enable</span> chronyd
systemctl start chronyd
timedatectl set-ntp <span class="token boolean">true</span>
timedatectl set-timezone Asia/Shanghai
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----&gt; 时区状态：timedatectl status&quot;</span>
timedatectl status
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----&gt; 检测：chronyc activity -v&quot;</span>
chronyc activity <span class="token parameter variable">-v</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> ntpdate
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ntpsec-ntpdate
ntpdate time.windows.com
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="开启-ssh-远程登录" tabindex="-1"><a class="header-anchor" href="#开启-ssh-远程登录"><span>开启 ssh 远程登录</span></a></h4>`,38),Y={href:"https://blog.csdn.net/qq_42476834/article/details/124766896",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"k8s-centos7.sh，k8s-docker.sh，k8s-init.sh，k8s-install.sh",-1),X=e("h4",{id:"所有节点安装容器运行时containerd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#所有节点安装容器运行时containerd"},[e("span",null,"所有节点安装容器运行时containerd")])],-1),W={href:"https://kubernetes.io/zh-cn/docs/setup/production-environment/container-runtimes/#containerd",target:"_blank",rel:"noopener noreferrer"},J=t(`<p><strong>安装containerd，有可能默认已经安装</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要从这里开始配置：<strong>生成config.toml配置</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>containerd config default <span class="token operator">&gt;</span> /etc/containerd/config.toml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>配置 systemd cgroup 驱动 在 /etc/containerd/config.toml 中设置</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/SystemdCgroup = false/SystemdCgroup = true/g&#39;</span> /etc/containerd/config.toml

或手动修改

<span class="token punctuation">[</span>plugins<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>plugins.<span class="token string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc<span class="token punctuation">]</span>
      <span class="token punctuation">[</span>plugins.<span class="token string">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc.options<span class="token punctuation">]</span>
        SystemdCgroup <span class="token operator">=</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>将sandbox_image下载地址改为阿里云地址</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/sandbox_image = \\&quot;registry.k8s.io\\/pause:3.6\\&quot;/sandbox_image = \\&quot;registry.aliyuncs.com\\/google_containers\\/pause:3.9\\&quot;/g&#39;</span> /etc/containerd/config.toml

或手动修改

<span class="token punctuation">[</span>plugins.<span class="token string">&quot;io.containerd.grpc.v1.cri&quot;</span><span class="token punctuation">]</span>
    sandbox_image <span class="token operator">=</span> <span class="token string">&quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>启动containerd 并设置开机自启动</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl restart containerd <span class="token operator">&amp;&amp;</span> systemctl <span class="token builtin class-name">enable</span> containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="containerd和docker操作差异" tabindex="-1"><a class="header-anchor" href="#containerd和docker操作差异"><span>containerd和docker操作差异</span></a></h4><table><thead><tr><th>操作</th><th>Docker</th><th>Containerd (ctr)</th><th>Crictl (K8s)</th></tr></thead><tbody><tr><td>查看运行的容器</td><td>docker ps</td><td>ctr task ls</td><td>crictl ps</td></tr><tr><td>查看镜像</td><td>docker images</td><td>ctr image ls</td><td>crictl images</td></tr><tr><td>查看容器日志</td><td>docker logs</td><td>无</td><td>crictl logs</td></tr><tr><td>查看容器数据信息</td><td>docker inspect</td><td>ctr container info</td><td>crictl inspect</td></tr><tr><td>查看容器资源</td><td>docker stats</td><td>无</td><td>crictl stats</td></tr><tr><td>启动/关闭已有的容器</td><td>docker start/stop</td><td>ctr task start/kill</td><td>crictl start/stop</td></tr><tr><td>运行一个新的容器</td><td>docker run</td><td>ctr run</td><td>无</td></tr><tr><td>修改镜像标签</td><td>docker tag</td><td>ctr image tag</td><td>无</td></tr><tr><td>创建一个新的容器</td><td>docker create</td><td>ctr container create</td><td>crictl create</td></tr><tr><td>导入镜像</td><td>docker load</td><td>ctr image import</td><td>无</td></tr><tr><td>导出镜像</td><td>docker save</td><td>ctr image export</td><td>无</td></tr><tr><td>删除容器</td><td>docker rm</td><td>ctr container rm</td><td>crictl rm</td></tr><tr><td>删除镜像</td><td>docker rmi</td><td>ctr image rm</td><td>crictl rmi</td></tr><tr><td>拉取镜像</td><td>docker pull</td><td>ctr image pull</td><td>crictl pull</td></tr><tr><td>推送镜像</td><td>docker push</td><td>ctr image push</td><td>无</td></tr><tr><td>在容器内部执行命令</td><td>docker exec</td><td>无</td><td>crictl exec</td></tr></tbody></table><h3 id="a、在所有节点上安装-docker和kubernetes" tabindex="-1"><a class="header-anchor" href="#a、在所有节点上安装-docker和kubernetes"><span>A、在所有节点上安装 Docker和kubernetes</span></a></h3>`,13),Q={href:"https://kubernetes.io/zh/docs/tasks/tools/",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://kubernetes.io/zh-cn/releases/",target:"_blank",rel:"noopener noreferrer"},se={href:"https://github.com/kubernetes/kubernetes/tree/master/CHANGELOG",target:"_blank",rel:"noopener noreferrer"},ae=t('<h4 id="k8s抛弃docker的原因" tabindex="-1"><a class="header-anchor" href="#k8s抛弃docker的原因"><span>K8s抛弃Docker的原因</span></a></h4><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Kubernetes 1.24+ 版本虽然已经不使用原始docker，k8s使用了containerd替代，但如果不想用它，也可以使用docker推出的 cri-dockerd。</p><h4 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span>安装docker</span></a></h4><p><strong>Kubernetes 1.24+ 版本已经去除了对Docker的直接接口支持,需要通过containerd + docker CRI使用Docker。</strong></p>',5),te={href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"},le=t(`<p>卸载的旧版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum remove <span class="token function">docker</span> docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>华为安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">1</span>、若您安装过docker，需要先删掉，之后再安装依赖:
  yum remove <span class="token function">docker</span> docker-common docker-selinux docker-engine
  yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2
<span class="token number">2</span>、下载repo文件
  <span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/docker-ce.repo https://repo.huaweicloud.com/docker-ce/linux/centos/docker-ce.repo
替换为：
  <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s+download.docker.com+repo.huaweicloud.com/docker-ce+&#39;</span> /etc/yum.repos.d/docker-ce.repo
<span class="token number">3</span>、更新索引文件并安装
  yum clean all <span class="token operator">&amp;&amp;</span>   yum makecache fast
  yum list docker-ce.x86_64 <span class="token parameter variable">--showduplicates</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-r</span>
  yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce
<span class="token number">4</span>、开启Docker服务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>阿里安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># step 1: 安装必要的一些系统工具</span>
  yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2
<span class="token comment"># Step 2: 添加软件源信息</span>
  yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
<span class="token comment"># Step 3</span>
  <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#39;</span> /etc/yum.repos.d/docker-ce.repo
<span class="token comment"># Step 4: 更新并安装Docker-CE</span>
  yum clean all <span class="token operator">&amp;&amp;</span>   yum makecache fast
  yum list docker-ce.x86_64 <span class="token parameter variable">--showduplicates</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-r</span>
  yum <span class="token parameter variable">-y</span> <span class="token function">install</span> docker-ce-<span class="token punctuation">[</span>VERSION<span class="token punctuation">]</span>
<span class="token comment"># Step 4: 开启Docker服务</span>
  <span class="token function">service</span> <span class="token function">docker</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token function">docker</span>
systemctl restart <span class="token function">docker</span>
systemctl stop <span class="token function">docker</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
systemctl disable <span class="token function">docker</span>
systemctl status <span class="token function">docker</span>
<span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> a <span class="token comment">#非root用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置加速</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-su</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/docker/daemon.json</span>
{
  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],
  &quot;log-driver&quot;: &quot;json-file&quot;,
  &quot;log-opts&quot;: {
    &quot;max-size&quot;: &quot;100m&quot;
  },
  &quot;storage-driver&quot;: &quot;overlay2&quot;,
  &quot;registry-mirrors&quot;: [
    &quot;https://04eo9xup.mirror.aliyuncs.com&quot;,
    &quot;https://098cc8006500f4db0f2fc01937bbce40.mirror.swr.myhuaweicloud.com&quot;
  ],
}
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>  systemctl daemon-reload
  systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker配置http代理（可选）</strong></p><p>首先, 使用<code>systemctl status docker</code>命令查询<code>docker.service</code>文件的路径, 在我的环境中它的文件路径是<code>/lib/systemd/system/docker.service</code>; 然后编辑这个文件, 添加如下内容:</p><p><code>vim /lib/systemd/system/docker.service</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">&quot;HTTP_PROXY=http://127.0.0.1:10809&quot;</span>
<span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">&quot;HTTPS_PROXY=http://127.0.0.1:10809&quot;</span> 
<span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">&quot;NO_PROXY=localhost,127.0.0.0/8,192.168.0.0/16,10.0.0.0/8&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加kubernetes仓库源" tabindex="-1"><a class="header-anchor" href="#添加kubernetes仓库源"><span>添加kubernetes仓库源</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 老版配置v1.28以前+部分版本</span>
<span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /etc/yum.repos.d/kubernetes.repo</span>
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=1
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF</span>

<span class="token comment">## 新版配置v1.24-v1.29</span>
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">|</span> <span class="token function">tee</span> /etc/yum.repos.d/kubernetes.repo</span>
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/rpm/
enabled=1
gpgcheck=1
gpgkey=https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/rpm/repodata/repomd.xml.key
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>更新索引文件并查看 kubernetes版本列表</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum clean all <span class="token operator">&amp;&amp;</span> yum makecache <span class="token operator">&amp;&amp;</span> yum <span class="token parameter variable">-y</span> update <span class="token operator">&amp;&amp;</span> yum repolist

yum list kube*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>failure: repodata/repomd.xml from kubernetes: [Errno 256] No more mirrors to try.</code></p><p>暂时禁用存储库：<code>yum --disablerepo=kubernetes</code></p><p>永久禁用存储库：<code>yum-config-manager --disable kubernetes or subscription-manager repos --disable=kubernetes</code></p><p>如果不可用，则跳过：<code>yum-config-manager --save --setopt=kubernetes.skip_if_unavailable=true</code></p><h4 id="master节点安装" tabindex="-1"><a class="header-anchor" href="#master节点安装"><span>master节点安装</span></a></h4><p><strong>升级0，新安装0，降级3，删除0，未升级25</strong></p><div class="language-ABAP line-numbers-mode" data-ext="ABAP" data-title="ABAP"><pre class="language-ABAP"><code>apt-get install -y kubeadm=1.27.2-0 kubelet=1.27.2-0 kubectl=1.27.2-0

华为：
yum install kubelet-1.27.2-0 kubeadm-1.27.2-0 kubectl-1.27.2-0 --disableexcludes=kubernetes
阿里：
yum install kubelet-1.27.2 kubeadm-1.27.2 kubectl-1.27.2 --disableexcludes=kubernetes
yum install --nogpgcheck kubelet-1.27.2 kubeadm-1.27.2 kubectl-1.27.2 --disableexcludes=kubernetes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="node节点安装" tabindex="-1"><a class="header-anchor" href="#node节点安装"><span>node节点安装</span></a></h4><p><code>yum install kubelet-1.27.2-0 kubeadm-1.27.2-0 kubectl-1.27.2-0</code></p><h4 id="创建k8s软连接" tabindex="-1"><a class="header-anchor" href="#创建k8s软连接"><span>创建k8s软连接</span></a></h4><p>执行：<code>ln -s /usr/bin/kube* /usr/local/bin/</code></p><h4 id="启动-k8s" tabindex="-1"><a class="header-anchor" href="#启动-k8s"><span>启动 k8s</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> kubelet
systemctl disable kubelet
systemctl start kubelet
systemctl stop kubelet
systemctl status kubelet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现：<code>kubelet.service - kubelet: The Kubernetes Node Agent</code>，属于正常，k8s还没有配置</p><h3 id="b、master-部署-kubernetes" tabindex="-1"><a class="header-anchor" href="#b、master-部署-kubernetes"><span>B、Master 部署 Kubernetes</span></a></h3>`,33),ie={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},re={href:"https://hub.docker.com/u/aiotceo",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://hub.docker.com/u/mirrorgooglecontainers",target:"_blank",rel:"noopener noreferrer"},ce=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> swr.myhuaweicloud.com/iivey
<span class="token operator">&gt;</span> registry.k8s.io
<span class="token operator">&gt;</span> registry.cn-chengdu.aliyuncs.com/k8sjf
<span class="token operator">&gt;</span> registry.aliyuncs.com/google_containers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置k8s镜像仓库源" tabindex="-1"><a class="header-anchor" href="#设置k8s镜像仓库源"><span>设置k8s镜像仓库源</span></a></h4><p>查看安装k8s的相关信息</p><p><code>kubeadm config print init-defaults</code></p><p>查询需要的镜像</p><p><code>kubeadm config images list</code></p>`,6),de={href:"http://registry.aliyuncs.com/google_containers",target:"_blank",rel:"noopener noreferrer"},pe=t(`<p><code>kubeadm config images list --kubernetes-version=v1.27.2 --image-repository registry.aliyuncs.com/google_containers</code></p><h4 id="master-kubeadm初始化" tabindex="-1"><a class="header-anchor" href="#master-kubeadm初始化"><span>master-kubeadm初始化</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>kubeadm init <span class="token punctuation">\\</span>
--apiserver-advertise-address<span class="token operator">=</span><span class="token number">192.168</span>.100.130 <span class="token punctuation">\\</span>
--control-plane-endpoint<span class="token operator">=</span><span class="token number">192.168</span>.100.130 <span class="token punctuation">\\</span>
--image-repository registry.aliyuncs.com/google_containers <span class="token punctuation">\\</span>
--kubernetes-version v1.27.2 <span class="token punctuation">\\</span>
--service-cidr<span class="token operator">=</span><span class="token number">10.96</span>.0.0/16 <span class="token punctuation">\\</span>
--pod-network-cidr<span class="token operator">=</span><span class="token number">10.244</span>.0.0/16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="得到-kubeadm-join" tabindex="-1"><a class="header-anchor" href="#得到-kubeadm-join"><span>得到 kubeadm join</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>您的Kubernetes控制平面已成功初始化！
要开始使用群集，您需要以普通用户身份运行以下命令：
    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token environment constant">$HOME</span>/.kube
    <span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-i</span> /etc/kubernetes/admin.conf <span class="token environment constant">$HOME</span>/.kube/config
    <span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-u</span><span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-g</span><span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/.kube/config

或者，如果您是root用户，则可以运行：
  <span class="token builtin class-name">export</span> <span class="token assign-left variable">KUBECONFIG</span><span class="token operator">=</span>/etc/kubernetes/admin.conf
  
您现在应该在集群上部署一个pod网络。
使用下列选项之一运行“kubectl apply <span class="token parameter variable">-f</span> <span class="token punctuation">[</span>podnetwork<span class="token punctuation">]</span>.yaml”：
https://kubernetes.io/docs/concepts/cluster-administration/addons/

<span class="token comment">##### master</span>
现在，您可以通过复制证书颁发机构来加入任意数量的控制平面节点
和每个节点上的服务帐户密钥，然后以root用户身份运行以下操作：
kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.100.130:6443 <span class="token parameter variable">--token</span> y1iv7u.3j2bvevxwj0pcmxr <span class="token punctuation">\\</span>
        --discovery-token-ca-cert-hash sha256:5aba30843f69ff954e4afed9b712cfd1773c5a0c622a9d6e1cdcc2d937857815 <span class="token punctuation">\\</span>
        --control-plane

然后，在每个节点上以root身份运行以下操作，可以加入任意数量的工作节点：
<span class="token comment">###### node</span>
<span class="token function">su</span> root
kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.100.130:6443 <span class="token parameter variable">--token</span> y1iv7u.3j2bvevxwj0pcmxr <span class="token punctuation">\\</span>
        --discovery-token-ca-cert-hash sha256:5aba30843f69ff954e4afed9b712cfd1773c5a0c622a9d6e1cdcc2d937857815
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="error-cri-container-runtime-is-not-running" tabindex="-1"><a class="header-anchor" href="#error-cri-container-runtime-is-not-running"><span>[ERROR CRI]: container runtime is not running</span></a></h4>`,6),ue={href:"https://kubernetes.io/zh-cn/docs/setup/production-environment/container-runtimes/#containerd",target:"_blank",rel:"noopener noreferrer"},me=t(`<p><a href="#%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85containerd">所有节点安装containerd</a></p><ol><li>删除 <code>/etc/containerd/config.toml</code> 文件。</li><li>要确保 <code>cri</code> 没有出现在 <code>/etc/containerd/config.toml</code> 文件中 <code>disabled_plugins</code> 列表内。</li><li>执行<code>生成config.toml配置</code> 命令：<code>containerd config default &gt; /etc/containerd/config.toml</code></li></ol><p>然后重新启动 containerd：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl restart containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="重启后出现-the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port" tabindex="-1"><a class="header-anchor" href="#重启后出现-the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port"><span>重启后出现：<code>The connection to the server localhost:8080 was refused - did you specify the right host or port?</code></span></a></h4>`,5),be={href:"https://blog.csdn.net/qq_42476834/article/details/124730955",target:"_blank",rel:"noopener noreferrer"},ke=t(`<h4 id="将主节点-master-中的-etc-kubernetes-admin-conf-文件拷贝到从节点-node-相同目录下" tabindex="-1"><a class="header-anchor" href="#将主节点-master-中的-etc-kubernetes-admin-conf-文件拷贝到从节点-node-相同目录下"><span>将主节点（master）中的“/etc/kubernetes/admin.conf”文件拷贝到从节点（node）相同目录下</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">scp</span> /etc/kubernetes/admin.conf root@192.168.100.131:/etc/kubernetes/ <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">scp</span> /etc/kubernetes/admin.conf root@192.168.100.132:/etc/kubernetes/

<span class="token builtin class-name">echo</span> <span class="token string">&quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bash_profile
或者
<span class="token function">scp</span> ~/.bash_profile root@192.168.100.131:/root/ <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">scp</span> ~/.bash_profile root@192.168.100.132:/root/

<span class="token builtin class-name">source</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="解决端口占用-kubeadm-reset" tabindex="-1"><a class="header-anchor" href="#解决端口占用-kubeadm-reset"><span>解决端口占用：kubeadm reset</span></a></h4><h3 id="c、将从节点-node-加入-kubernetes-master-集群中" tabindex="-1"><a class="header-anchor" href="#c、将从节点-node-加入-kubernetes-master-集群中"><span>C、将从节点（node）加入 Kubernetes （Master）集群中</span></a></h3><p>su root 在每个根节点上运行以下操作：</p><p><a href="#master-kubeadm%E5%88%9D%E5%A7%8B%E5%8C%96">查看 kubeadm init</a></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">su</span> root
kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.100.130:6443 <span class="token parameter variable">--token</span> wmgb01.rwvu0csqrn5ayt1k <span class="token punctuation">\\</span>
        --discovery-token-ca-cert-hash sha256:e542e830fa<span class="token punctuation">..</span>.42627bc27f39bb0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@node-121 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm join 192.168.100.130:6443 --token 971p07.4h9ljb93kcm471bd --discovery-token-ca-cert-hash sha256:2f02b1e110...5bc55393ea61b</span>

<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> 进行飞行前检查
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> 从集群中读取配置<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> 仅供参考：您可以查看此配置文件<span class="token string">&#39;kubectl -n kube-system get cm kubeadm-config -o yaml&#39;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> 将 kubelet 配置写入文件 <span class="token string">&quot;/var/lib/kubelet/config.yaml&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> 将带有标志的 kubelet 环境文件写入文件 <span class="token string">&quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> 启动 kubelet
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> 等待 kubelet 执行 TLS Bootstrap<span class="token punctuation">..</span>.

此节点已加入集群：
* 证书签名请求已发送到 apiserver 并收到响应。
* Kubelet  被告知新的安全连接细节。

Run <span class="token string">&#39;kubectl get nodes&#39;</span> 在控制平面上查看该节点加入集群。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="kubeadm-config-略过-嘿嘿嘿" tabindex="-1"><a class="header-anchor" href="#kubeadm-config-略过-嘿嘿嘿"><span>kubeadm-config（略过 嘿嘿嘿）</span></a></h4><p><code>kubectl -n kube-system get cm kubeadm-config -o yaml &gt; /etc/kubernetes/kubeadm-config.yaml</code></p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>apiVersion<span class="token operator">:</span> v1
data<span class="token operator">:</span>
  ClusterConfiguration<span class="token operator">:</span> |
    apiServer<span class="token operator">:</span>
      extraArgs<span class="token operator">:</span>
        authorization-mode<span class="token operator">:</span> Node<span class="token punctuation">,</span>RBAC
      timeoutForControlPlane<span class="token operator">:</span> 4m0s
    apiVersion<span class="token operator">:</span> kubeadm.k8s.io/v1beta3
    certificatesDir<span class="token operator">:</span> /etc/kubernetes/pki
    clusterName<span class="token operator">:</span> kubernetes
    controlPlaneEndpoint<span class="token operator">:</span> <span class="token number">192.168</span>.<span class="token number">100.130</span><span class="token operator">:</span><span class="token number">6443</span>
    controllerManager<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    dns<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    etcd<span class="token operator">:</span>
      local<span class="token operator">:</span>
        dataDir<span class="token operator">:</span> /var/lib/etcd
    imageRepository<span class="token operator">:</span> registry.cn-chengdu.aliyuncs.com/k8sjf
    kind<span class="token operator">:</span> ClusterConfiguration
    kubernetesVersion<span class="token operator">:</span> v1.<span class="token number">27.2</span>
    networking<span class="token operator">:</span>
      dnsDomain<span class="token operator">:</span> cluster.local
      podSubnet<span class="token operator">:</span> <span class="token number">10.244</span>.<span class="token number">0.0</span>/<span class="token number">16</span>
      serviceSubnet<span class="token operator">:</span> <span class="token number">10.96</span>.<span class="token number">0.0</span>/<span class="token number">16</span>
    scheduler<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
kind<span class="token operator">:</span> ConfigMap
metadata<span class="token operator">:</span>
  creationTimestamp<span class="token operator">:</span> <span class="token string">&quot;2022-08-27T07:05:29Z&quot;</span>
  name<span class="token operator">:</span> kubeadm-config
  namespace<span class="token operator">:</span> kube-system
  resourceVersion<span class="token operator">:</span> <span class="token string">&quot;199&quot;</span>
  uid<span class="token operator">:</span> 45ddd51c-8ef3-4f86<span class="token number">-8406</span>-3d1a11d5e4c5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="token过期-重新设置" tabindex="-1"><a class="header-anchor" href="#token过期-重新设置"><span>token过期，重新设置</span></a></h4><blockquote><p>kubeadm token list</p><p>kubeadm token create --print-join-command</p><p>kubeadm token create --ttl 0 --print-join-command</p></blockquote><h3 id="d、master-部署网络策略插件" tabindex="-1"><a class="header-anchor" href="#d、master-部署网络策略插件"><span>D、master 部署网络策略插件</span></a></h3><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',15),ve={href:"https://kubernetes.io/zh/docs/concepts/cluster-administration/addons/",target:"_blank",rel:"noopener noreferrer"},he=e("p",null,"下表总结了不同的 GitHub 指标，让你了解每个项目的受欢迎程度和活动。数据收集于 2024 年 3 月。",-1),ge=e("thead",null,[e("tr",null,[e("th",null,"提供商"),e("th",null,"项目"),e("th",null,"Stars"),e("th",null,"Forks"),e("th",null,"Contributors贡献者")])],-1),fe=e("td",null,"Cilium",-1),_e={href:"https://github.com/cilium/cilium",target:"_blank",rel:"noopener noreferrer"},ye=e("td",null,"18.1k",-1),xe=e("td",null,"2.6k",-1),Ee=e("td",null,"713",-1),we=e("td",null,"Calico",-1),qe={href:"https://github.com/projectcalico/calico",target:"_blank",rel:"noopener noreferrer"},Ae=e("td",null,"5.4k",-1),Re=e("td",null,"1.2k",-1),Se=e("td",null,"337",-1),Ce=e("td",null,"Flannel",-1),Ne={href:"https://github.com/flannel-io/flannel",target:"_blank",rel:"noopener noreferrer"},Oe=e("td",null,"8.4k",-1),Ke=e("td",null,"2.9k",-1),Te=e("td",null,"231",-1),De=e("td",null,"Weave",-1),Pe={href:"https://github.com/weaveworks/weave/",target:"_blank",rel:"noopener noreferrer"},je=e("td",null,"6.6k",-1),Be=e("td",null,"660",-1),ze=e("td",null,"87",-1),Fe=e("td",null,"Canal",-1),Ie={href:"https://github.com/projectcalico/canal",target:"_blank",rel:"noopener noreferrer"},Ge=e("td",null,"709",-1),Me=e("td",null,"100",-1),He=e("td",null,"20",-1),Le=t(`<p>Flannel 的缺点之一是缺乏高级功能，例如配置网络策略和防火墙的能力。因此 Flannel 是 Kubernetes 集群网络的一个很好的入门级选择，但是，如果你正在寻找高级网络功能，你可能需要考虑其他 CNI 选项，例如 Cilium和Calico。</p><h4 id="配置网络策略-flannel" tabindex="-1"><a class="header-anchor" href="#配置网络策略-flannel"><span>配置网络策略 Flannel</span></a></h4><p>root用户：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>https://github.com/flannel-io/flannel<span class="token comment">#deploying-flannel-manually</span>

https://gitee.com/k8s_s/flannel/blob/master/Documentation/kube-flannel.yml

kubectl apply <span class="token parameter variable">-f</span> kube-flannel.yml

kubectl apply <span class="token parameter variable">-f</span> https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除：kubectl delete -f kube-flannel.yml</p><p>获取pods所有名称空间</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces -o wide</span>
NAMESPACE      NAME                             READY   STATUS    RESTARTS   AGE    IP                NODE     NOMINATED NODE   READINESS GATES
kube-flannel   kube-flannel-ds-2vkzl            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m7s   <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-flannel   kube-flannel-ds-f5jkp            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m7s   <span class="token number">192.168</span>.100.131   node1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-flannel   kube-flannel-ds-tlh6w            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          2m7s   <span class="token number">192.168</span>.100.132   node2    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    coredns-66f779496c-7qfs6         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">10.244</span>.2.2        node1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    coredns-66f779496c-bhx66         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">10.244</span>.2.3        node1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    etcd-master                      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-apiserver-master            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-controller-manager-master   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-proxy-2wq4b                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          35m    <span class="token number">192.168</span>.100.131   node1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-proxy-69rng                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-proxy-q4tj8                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          35m    <span class="token number">192.168</span>.100.132   node2    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-system    kube-scheduler-master            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          42m    <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置网络策略-cilium" tabindex="-1"><a class="header-anchor" href="#配置网络策略-cilium"><span>配置网络策略 Cilium</span></a></h4>`,8),Ue={id:"kubectl命令表",tabindex:"-1"},Ve={class:"header-anchor",href:"#kubectl命令表"},$e={href:"https://blog.csdn.net/qq_42476834/article/details/121781274",target:"_blank",rel:"noopener noreferrer"},Ye=t(`<h4 id="查看" tabindex="-1"><a class="header-anchor" href="#查看"><span>查看</span></a></h4><p>列出所有运行的Pod信息</p><p>列出Pod以及运行Pod节点信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master-120 kubelet<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
No resources found <span class="token keyword">in</span> default namespace.
<span class="token punctuation">[</span>root@master-120 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -o wide</span>
No resources found <span class="token keyword">in</span> default namespace.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看所以节点 <strong>kg nodes</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master-120 kubelet<span class="token punctuation">]</span><span class="token comment"># kg nodes</span>
NAME         STATUS   ROLES                  AGE   VERSION
master-120   Ready    control-plane,master   63m   v1.27.2
node-121     Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 58m   v1.27.2
node-122     Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 58m   v1.27.2
node-123     Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 58m   v1.27.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看命名空间 <strong>kubectl get ns</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master-120 kubelet<span class="token punctuation">]</span><span class="token comment"># kubectl get ns</span>
NAME              STATUS   AGE
default           Active   63m
kube-node-lease   Active   63m
kube-public       Active   63m
kube-system       Active   63m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看 pod 命名空间 <strong>kubectl get pods --all-namespaces -owide</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
NAMESPACE      NAME                             READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-kfd89            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m50s
kube-flannel   kube-flannel-ds-n8fr9            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m50s
kube-flannel   kube-flannel-ds-tfj78            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m50s
kube-system    coredns-687d9f64f-b8cvf          <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    coredns-687d9f64f-d99x9          <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    etcd-master                      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    kube-apiserver-master            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    kube-controller-manager-master   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    kube-proxy-6v2v9                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          51m
kube-system    kube-proxy-8z62f                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          52m
kube-system    kube-proxy-ch88v                 <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
kube-system    kube-scheduler-master            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          55m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>kubectl get pods -n kube-system</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master-120 kubelet<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n kube-flannel</span>
NAME                                 READY   STATUS    RESTARTS   AGE
kube-flannel-ds-44l8g                <span class="token number">1</span>/1     Running   <span class="token number">0</span>          48m
kube-flannel-ds-cf2zd                <span class="token number">1</span>/1     Running   <span class="token number">0</span>          48m
kube-flannel-ds-tkbnh                <span class="token number">1</span>/1     Running   <span class="token number">0</span>          48m
kube-flannel-ds-wxhk4                <span class="token number">1</span>/1     Running   <span class="token number">0</span>          48m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>kubectl get pods -n kube-system -o wide</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -n kube-flannel -o wide</span>
NAME                    READY   STATUS    RESTARTS   AGE     IP                NODE     NOMINATED NODE   READINESS GATES
kube-flannel-ds-kfd89   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m15s   <span class="token number">192.168</span>.100.132   node2    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-flannel-ds-n8fr9   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m15s   <span class="token number">192.168</span>.100.130   master   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
kube-flannel-ds-tfj78   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4m15s   <span class="token number">192.168</span>.100.131   node1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>kube-flannel-ds-xxxx 必须运行OK</strong></p><h3 id="e、可视化管理工具" tabindex="-1"><a class="header-anchor" href="#e、可视化管理工具"><span>E、可视化管理工具</span></a></h3><h4 id="_1、dashboard-不推荐" tabindex="-1"><a class="header-anchor" href="#_1、dashboard-不推荐"><span>1、dashboard（不推荐）</span></a></h4>`,17),Ze={href:"https://kuboard.cn/install/install-k8s-dashboard.html",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/kubernetes/dashboard/releases/tag/v2.4.0",target:"_blank",rel:"noopener noreferrer"},We=e("p",null,[e("code",null,"kubectl apply -f https://gitee.com/k8s_s/dashboard1/blob/v2.4.0/aio/deploy/recommended.yaml -o yaml > dashboard.yaml")],-1),Je=e("h4",{id:"_2、kubesphere-推荐1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2、kubesphere-推荐1"},[e("span",null,"2、KubeSphere（推荐1）")])],-1),Qe={href:"https://github.com/kubesphere/kubesphere",target:"_blank",rel:"noopener noreferrer"},en=e("h4",{id:"_3、rancher-推荐2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3、rancher-推荐2"},[e("span",null,"3、Rancher（推荐2）")])],-1),nn={href:"https://github.com/rancher/rancher",target:"_blank",rel:"noopener noreferrer"},sn=e("h4",{id:"_4、kuboard-推荐3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4、kuboard-推荐3"},[e("span",null,"4、Kuboard（推荐3）")])],-1),an={href:"https://github.com/eip-work/kuboard-press",target:"_blank",rel:"noopener noreferrer"},tn=e("h4",{id:"_5、kubeoperator",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5、kubeoperator"},[e("span",null,"5、KubeOperator")])],-1),ln={href:"https://github.com/eip-work/kuboard-press",target:"_blank",rel:"noopener noreferrer"};function rn(on,cn){const a=r("ExternalLinkIcon"),l=r("RouteLink");return c(),d("div",null,[E,e("p",null,[n("中文社区: "),e("a",w,[n("https://www.kubernetes.org.cn/"),s(a)])]),e("p",null,[n("官方文档: "),e("a",q,[n("https://kubernetes.io/zh/docs/home/"),s(a)])]),e("p",null,[n("社区文档: "),e("a",A,[n("http://docs.kubernetes.org.cn/"),s(a)]),n("，"),e("a",R,[n("https://feisky.gitbooks.io/kubernetes/content/"),s(a)])]),e("p",null,[e("a",S,[n("历史版本 Release History"),s(a)])]),e("p",null,[e("a",C,[n("客户端下载 github"),s(a)])]),N,e("h3",O,[e("a",K,[e("span",null,[e("a",T,[n("为什么需要 Kubernetes，它能做什么?"),s(a)])])])]),D,e("p",null,[n("API 服务器是 Kubernetes "),e("a",P,[n("控制面"),s(a)]),n("的组件， 该组件公开了 Kubernetes API。")]),j,B,z,e("p",null,[n("控制平面组件，负责监视新创建的、未指定运行"),e("a",F,[n("节点（node）"),s(a)]),n("的 "),e("a",I,[n("Pods"),s(a)]),n("，选择节点让 Pod 在上面运行。")]),G,e("p",null,[n("在主节点上运行 "),e("a",M,[n("控制器"),s(a)]),n(" 的组件")]),H,e("p",null,[n("云控制器管理器是指嵌入特定云的控制逻辑的 "),e("a",L,[n("控制平面"),s(a)]),n("组件")]),U,e("p",null,[e("a",V,[n("csdn原文链接"),s(a)])]),e("p",null,[n("具体命令请看："),s(l,{to:"/k8s/setting-alias.html"},{default:i(()=>[n("k8s-alias")]),_:1})]),$,e("p",null,[e("a",Y,[n("具体参考文档"),s(a)])]),e("p",null,[s(l,{to:"/k8s/ssh.html"},{default:i(()=>[n("开启 ssh 远程登录文档")]),_:1})]),e("p",null,[s(l,{to:"/k8s/script.html"},{default:i(()=>[n("执行sh脚本")]),_:1}),n("："),Z]),X,e("p",null,[e("a",W,[n("官方原文地址"),s(a)])]),J,e("p",null,[e("a",Q,[n("安装工具"),s(a)]),n("："),e("a",ee,[n("docker"),s(a)]),n("、kubeadm管理、kukelet代理、kubectl命令行")]),e("p",null,[e("a",ne,[n("kubernetes版本 History"),s(a)])]),e("p",null,[e("a",se,[n("https://github.com/kubernetes/kubernetes/tree/master/CHANGELOG"),s(a)])]),ae,e("p",null,[e("a",te,[n("https://docs.docker.com/engine/install/centos/"),s(a)])]),le,e("p",null,[n("编辑 master_images.sh：设置需要的镜像，仓库地址："),e("a",ie,[n("官网docker镜像搜索"),s(a)])]),e("p",null,[e("a",re,[n("https://hub.docker.com/u/aiotceo"),s(a)]),n(" 、"),e("a",oe,[n("https://hub.docker.com/u/mirrorgooglecontainers"),s(a)])]),ce,e("p",null,[n("设置k8s镜像仓库为，如果不确定，可以设置为 "),e("strong",null,[e("a",de,[n("registry.aliyuncs.com/google_containers"),s(a)])])]),pe,e("p",null,[e("a",ue,[n("官网解决方案"),s(a)])]),me,e("p",null,[n("解决："),e("a",be,[n("https://blog.csdn.net/qq_42476834/article/details/124730955"),s(a)])]),e("p",null,[s(l,{to:"/k8s/ssh.html"},{default:i(()=>[n("ssh免密登录访问")]),_:1})]),ke,e("p",null,[n("参考："),e("a",ve,[n("https://kubernetes.io/zh/docs/concepts/cluster-administration/addons/"),s(a)])]),he,e("table",null,[ge,e("tbody",null,[e("tr",null,[fe,e("td",null,[e("a",_e,[n("cilium/cilium"),s(a)])]),ye,xe,Ee]),e("tr",null,[we,e("td",null,[e("a",qe,[n("projectcalico/calico"),s(a)])]),Ae,Re,Se]),e("tr",null,[Ce,e("td",null,[e("a",Ne,[n("flannel-io/flannel"),s(a)])]),Oe,Ke,Te]),e("tr",null,[De,e("td",null,[e("a",Pe,[n("weaveworks/weave"),s(a)])]),je,Be,ze]),e("tr",null,[Fe,e("td",null,[e("a",Ie,[n("projectcalico/canal"),s(a)])]),Ge,Me,He])])]),Le,e("h4",Ue,[e("a",Ve,[e("span",null,[e("a",$e,[n("kubectl命令表"),s(a)])])])]),Ye,e("p",null,[n("文档："),e("a",Ze,[n("https://kuboard.cn/install/install-k8s-dashboard.html"),s(a)])]),e("p",null,[e("a",Xe,[n("https://github.com/kubernetes/dashboard/releases/tag/v2.4.0"),s(a)])]),We,Je,e("ul",null,[e("li",null,[s(l,{to:"/k8s/kubesphere.html"},{default:i(()=>[n("跳转-本站文档")]),_:1})]),e("li",null,[e("a",Qe,[n("Github KubeSphere"),s(a)]),n("，star: 14.1+K")])]),en,e("ul",null,[e("li",null,[s(l,{to:"/k8s/rancher.html"},{default:i(()=>[n("跳转-本站文档")]),_:1})]),e("li",null,[e("a",nn,[n("Github Rancher"),s(a)]),n("，star: 22.4+K")])]),sn,e("ul",null,[e("li",null,[s(l,{to:"/k8s/kuboard.html"},{default:i(()=>[n("跳转-本站文档")]),_:1})]),e("li",null,[e("a",an,[n("Github Kuboard"),s(a)]),n(" stars 20.7+K")])]),tn,e("ul",null,[e("li",null,[s(l,{to:"/k8s/kubeoperator.html"},{default:i(()=>[n("跳转-本站文档")]),_:1})]),e("li",null,[e("a",ln,[n("Github KubeOperator"),s(a)]),n(" stars 4.9+K")])])])}const un=o(x,[["render",rn],["__file","basis.html.vue"]]),mn=JSON.parse('{"path":"/k8s/basis.html","title":"k8s 集群搭建","lang":"zh-CN","frontmatter":{"icon":"/icons/k8s/k8s_16x16.png","title":"k8s 集群搭建","category":["kubernetes"],"headerDepth":5,"date":"2020-04-20T00:00:00.000Z","order":3,"tag":["Linux","k8s"],"description":"k8s 集群搭建，部署网络策略插件，可视化管理工具","head":[["meta",{"property":"og:url","content":"https://blogres.github.io/k8s/basis.html"}],["meta",{"property":"og:title","content":"k8s 集群搭建"}],["meta",{"property":"og:description","content":"k8s 集群搭建，部署网络策略插件，可视化管理工具"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-23T00:09:28.000Z"}],["meta",{"property":"article:author","content":"blogres"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"k8s"}],["meta",{"property":"article:published_time","content":"2020-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-23T00:09:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"k8s 集群搭建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-23T00:09:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"blogres\\",\\"url\\":\\"/article\\"}]}"]]},"headers":[{"level":2,"title":"一、概念","slug":"一、概念","link":"#一、概念","children":[{"level":3,"title":"为什么需要 Kubernetes，它能做什么?","slug":"为什么需要-kubernetes-它能做什么","link":"#为什么需要-kubernetes-它能做什么","children":[]},{"level":3,"title":"简介：调度、自动修复、水平伸缩","slug":"简介-调度、自动修复、水平伸缩","link":"#简介-调度、自动修复、水平伸缩","children":[]},{"level":3,"title":"组件架构","slug":"组件架构","link":"#组件架构","children":[{"level":4,"title":"kube-apiserver","slug":"kube-apiserver","link":"#kube-apiserver","children":[]},{"level":4,"title":"etcd","slug":"etcd","link":"#etcd","children":[]},{"level":4,"title":"kube-scheduler","slug":"kube-scheduler","link":"#kube-scheduler","children":[]},{"level":4,"title":"kube-controller-manager","slug":"kube-controller-manager","link":"#kube-controller-manager","children":[]},{"level":4,"title":"cloud-controller-manager","slug":"cloud-controller-manager","link":"#cloud-controller-manager","children":[]}]},{"level":3,"title":"Node 组件","slug":"node-组件","link":"#node-组件","children":[{"level":4,"title":"kubelet","slug":"kubelet","link":"#kubelet","children":[]},{"level":4,"title":"kube-proxy","slug":"kube-proxy","link":"#kube-proxy","children":[]}]}]},{"level":2,"title":"二、集群安装+环境配置搭建","slug":"二、集群安装-环境配置搭建","link":"#二、集群安装-环境配置搭建","children":[{"level":3,"title":"kubectl 快捷键（alias）","slug":"kubectl-快捷键-alias","link":"#kubectl-快捷键-alias","children":[]},{"level":3,"title":"部署步骤","slug":"部署步骤","link":"#部署步骤","children":[]},{"level":3,"title":"环境准备k8s-init","slug":"环境准备k8s-init","link":"#环境准备k8s-init","children":[{"level":4,"title":"关闭防火墙","slug":"关闭防火墙","link":"#关闭防火墙","children":[]},{"level":4,"title":"禁用selinux","slug":"禁用selinux","link":"#禁用selinux","children":[]},{"level":4,"title":"禁用swap分区","slug":"禁用swap分区","link":"#禁用swap分区","children":[]},{"level":4,"title":"开启IPVS支持","slug":"开启ipvs支持","link":"#开启ipvs支持","children":[]},{"level":4,"title":"IPv4桥接流量传递配置","slug":"ipv4桥接流量传递配置","link":"#ipv4桥接流量传递配置","children":[]},{"level":4,"title":"network-security开启网络安全","slug":"network-security开启网络安全","link":"#network-security开启网络安全","children":[]},{"level":4,"title":"时间同步","slug":"时间同步","link":"#时间同步","children":[]},{"level":4,"title":"开启 ssh 远程登录","slug":"开启-ssh-远程登录","link":"#开启-ssh-远程登录","children":[]},{"level":4,"title":"所有节点安装容器运行时containerd","slug":"所有节点安装容器运行时containerd","link":"#所有节点安装容器运行时containerd","children":[]},{"level":4,"title":"containerd和docker操作差异","slug":"containerd和docker操作差异","link":"#containerd和docker操作差异","children":[]}]},{"level":3,"title":"A、在所有节点上安装 Docker和kubernetes","slug":"a、在所有节点上安装-docker和kubernetes","link":"#a、在所有节点上安装-docker和kubernetes","children":[{"level":4,"title":"K8s抛弃Docker的原因","slug":"k8s抛弃docker的原因","link":"#k8s抛弃docker的原因","children":[]},{"level":4,"title":"安装docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":4,"title":"添加kubernetes仓库源","slug":"添加kubernetes仓库源","link":"#添加kubernetes仓库源","children":[]},{"level":4,"title":"master节点安装","slug":"master节点安装","link":"#master节点安装","children":[]},{"level":4,"title":"node节点安装","slug":"node节点安装","link":"#node节点安装","children":[]},{"level":4,"title":"创建k8s软连接","slug":"创建k8s软连接","link":"#创建k8s软连接","children":[]},{"level":4,"title":"启动 k8s","slug":"启动-k8s","link":"#启动-k8s","children":[]}]},{"level":3,"title":"B、Master 部署 Kubernetes","slug":"b、master-部署-kubernetes","link":"#b、master-部署-kubernetes","children":[{"level":4,"title":"设置k8s镜像仓库源","slug":"设置k8s镜像仓库源","link":"#设置k8s镜像仓库源","children":[]},{"level":4,"title":"master-kubeadm初始化","slug":"master-kubeadm初始化","link":"#master-kubeadm初始化","children":[]},{"level":4,"title":"得到 kubeadm join","slug":"得到-kubeadm-join","link":"#得到-kubeadm-join","children":[]},{"level":4,"title":"[ERROR CRI]: container runtime is not running","slug":"error-cri-container-runtime-is-not-running","link":"#error-cri-container-runtime-is-not-running","children":[]},{"level":4,"title":"重启后出现：The connection to the server localhost:8080 was refused - did you specify the right host or port?","slug":"重启后出现-the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port","link":"#重启后出现-the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port","children":[]},{"level":4,"title":"将主节点（master）中的“/etc/kubernetes/admin.conf”文件拷贝到从节点（node）相同目录下","slug":"将主节点-master-中的-etc-kubernetes-admin-conf-文件拷贝到从节点-node-相同目录下","link":"#将主节点-master-中的-etc-kubernetes-admin-conf-文件拷贝到从节点-node-相同目录下","children":[]},{"level":4,"title":"解决端口占用：kubeadm reset","slug":"解决端口占用-kubeadm-reset","link":"#解决端口占用-kubeadm-reset","children":[]}]},{"level":3,"title":"C、将从节点（node）加入 Kubernetes （Master）集群中","slug":"c、将从节点-node-加入-kubernetes-master-集群中","link":"#c、将从节点-node-加入-kubernetes-master-集群中","children":[{"level":4,"title":"kubeadm-config（略过 嘿嘿嘿）","slug":"kubeadm-config-略过-嘿嘿嘿","link":"#kubeadm-config-略过-嘿嘿嘿","children":[]},{"level":4,"title":"token过期，重新设置","slug":"token过期-重新设置","link":"#token过期-重新设置","children":[]}]},{"level":3,"title":"D、master 部署网络策略插件","slug":"d、master-部署网络策略插件","link":"#d、master-部署网络策略插件","children":[{"level":4,"title":"配置网络策略 Flannel","slug":"配置网络策略-flannel","link":"#配置网络策略-flannel","children":[]},{"level":4,"title":"配置网络策略 Cilium","slug":"配置网络策略-cilium","link":"#配置网络策略-cilium","children":[]},{"level":4,"title":"kubectl命令表","slug":"kubectl命令表","link":"#kubectl命令表","children":[]},{"level":4,"title":"查看","slug":"查看","link":"#查看","children":[]}]},{"level":3,"title":"E、可视化管理工具","slug":"e、可视化管理工具","link":"#e、可视化管理工具","children":[{"level":4,"title":"1、dashboard（不推荐）","slug":"_1、dashboard-不推荐","link":"#_1、dashboard-不推荐","children":[]},{"level":4,"title":"2、KubeSphere（推荐1）","slug":"_2、kubesphere-推荐1","link":"#_2、kubesphere-推荐1","children":[]},{"level":4,"title":"3、Rancher（推荐2）","slug":"_3、rancher-推荐2","link":"#_3、rancher-推荐2","children":[]},{"level":4,"title":"4、Kuboard（推荐3）","slug":"_4、kuboard-推荐3","link":"#_4、kuboard-推荐3","children":[]},{"level":4,"title":"5、KubeOperator","slug":"_5、kubeoperator","link":"#_5、kubeoperator","children":[]}]}]}],"git":{"createdTime":1706536810000,"updatedTime":1713830968000,"contributors":[{"name":"topjfy","email":"topjfk@163.com","commits":14}]},"readingTime":{"minutes":15.53,"words":4659},"filePathRelative":"k8s/basis.md","localizedDate":"2020年4月20日","excerpt":"<p>k8s 集群搭建，部署网络策略插件，可视化管理工具</p>\\n","autoDesc":true}');export{un as comp,mn as data};
