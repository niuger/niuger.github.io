import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as a,a as t}from"./app-D1uezr0R.js";const n="/assets/true-clip_image002-CW_x2H37.png",i={},s=t('<p>数据库设计需要注意哪些规范。</p><h2 id="一、-基础规范" tabindex="-1"><a class="header-anchor" href="#一、-基础规范"><span>一、 基础规范</span></a></h2><h3 id="_1、必须使用innodb存储引擎" tabindex="-1"><a class="header-anchor" href="#_1、必须使用innodb存储引擎"><span>1、必须使用InnoDB存储引擎</span></a></h3><blockquote><p>支持事务、行级锁、并发性能更好、CPU及内存缓存页优化使得资源利用率更高</p></blockquote><h3 id="_2、新库默认使用utf8mb4字符集" tabindex="-1"><a class="header-anchor" href="#_2、新库默认使用utf8mb4字符集"><span>2、新库默认使用utf8mb4字符集</span></a></h3><blockquote><p>utf8mb4是utf8的超集，emoji表情以及部分不常见汉字在utf8下会表现为乱码。</p></blockquote><h3 id="_3、数据表、数据字段必须加中文注释" tabindex="-1"><a class="header-anchor" href="#_3、数据表、数据字段必须加中文注释"><span>3、数据表、数据字段必须加中文注释</span></a></h3><blockquote><p>添加注释能以后更好的知道是干什么用的</p></blockquote><h3 id="_4、禁止使用存储过程、视图、触发器、event" tabindex="-1"><a class="header-anchor" href="#_4、禁止使用存储过程、视图、触发器、event"><span>4、禁止使用存储过程、视图、触发器、Event</span></a></h3><blockquote><p>高并发大数据的互联网业务，架构设计思想是“解放数据库CPU，将计算转移到服务层”，并发量大的情况下，这些功能会将数据库拖死，业务逻辑放在服务层具备更好的拓展性，能够轻易实现“增机器就加性能”。数据库擅长存储与索引</p></blockquote><h3 id="_5、禁止存储大文件或者大照片" tabindex="-1"><a class="header-anchor" href="#_5、禁止存储大文件或者大照片"><span>5、禁止存储大文件或者大照片</span></a></h3><blockquote><p>大文件和照片存储在文件系统，数据库里存URI更好</p></blockquote><h3 id="_6、禁止使用应用程序配置文件内的账号手工访问线上数据库" tabindex="-1"><a class="header-anchor" href="#_6、禁止使用应用程序配置文件内的账号手工访问线上数据库"><span>6、禁止使用应用程序配置文件内的账号手工访问线上数据库</span></a></h3><h3 id="_7、禁止非dba对线上数据库进行写操作-修改线上数据需要提交工单-由dba执行-提交的sql语句必须经过测试" tabindex="-1"><a class="header-anchor" href="#_7、禁止非dba对线上数据库进行写操作-修改线上数据需要提交工单-由dba执行-提交的sql语句必须经过测试"><span>7、禁止非DBA对线上数据库进行写操作，修改线上数据需要提交工单，由DBA执行，提交的SQL语句必须经过测试</span></a></h3><h3 id="_8、分配非dba以只读账号-必须通过vpn-跳板机访问授权的从库" tabindex="-1"><a class="header-anchor" href="#_8、分配非dba以只读账号-必须通过vpn-跳板机访问授权的从库"><span>8、分配非DBA以只读账号，必须通过VPN+跳板机访问授权的从库</span></a></h3><h3 id="_9、开发、测试、线上环境隔离" tabindex="-1"><a class="header-anchor" href="#_9、开发、测试、线上环境隔离"><span>9、开发、测试、线上环境隔离</span></a></h3><h3 id="_10、不在数据库做计算-cpu计算务必移至业务层" tabindex="-1"><a class="header-anchor" href="#_10、不在数据库做计算-cpu计算务必移至业务层"><span>10、不在数据库做计算，cpu计算务必移至业务层</span></a></h3><h3 id="_11、平衡范式与冗余-为提高效率可以牺牲范式设计-冗余数据" tabindex="-1"><a class="header-anchor" href="#_11、平衡范式与冗余-为提高效率可以牺牲范式设计-冗余数据"><span>11、平衡范式与冗余，为提高效率可以牺牲范式设计，冗余数据</span></a></h3><h3 id="_12、拒绝3b-大sql-大事务-大批量" tabindex="-1"><a class="header-anchor" href="#_12、拒绝3b-大sql-大事务-大批量"><span>12、拒绝3B，大SQL，大事务，大批量</span></a></h3><h2 id="二、-命名规范" tabindex="-1"><a class="header-anchor" href="#二、-命名规范"><span>二、 命名规范</span></a></h2><h3 id="_1、只允许使用内网域名-而不是ip连接数据库" tabindex="-1"><a class="header-anchor" href="#_1、只允许使用内网域名-而不是ip连接数据库"><span>1、只允许使用内网域名，而不是ip连接数据库</span></a></h3><blockquote><p>使用域名，在切换数据库服务器的时候，只需要更改DNS域名解析，不需要更改配置文件。不只是数据库，缓的连接，服务的连接都必须使用内网域名。</p></blockquote><p>线上环境、开发环境、测试环境数据库内网域名命名规范</p><blockquote><p>业务名称：xxx</p><p>线上环境：dj.xxx.db</p><p>开发环境：dj.xxx.rdb</p><p>测试环境：dj.xxx.tdb</p></blockquote><h3 id="_2、库名、表名、字段名-小写-下划线风格-不超过32个字符-禁止拼音英文混用" tabindex="-1"><a class="header-anchor" href="#_2、库名、表名、字段名-小写-下划线风格-不超过32个字符-禁止拼音英文混用"><span>2、库名、表名、字段名：小写，下划线风格，不超过32个字符，禁止拼音英文混用</span></a></h3><h3 id="_3、表名t-xxx-非唯一索引名idx-xxx-唯一索引名uniq-xxx-idx-索引文件index-file" tabindex="-1"><a class="header-anchor" href="#_3、表名t-xxx-非唯一索引名idx-xxx-唯一索引名uniq-xxx-idx-索引文件index-file"><span>3、表名t_xxx，非唯一索引名idx_xxx，唯一索引名uniq_xxx（idx：索引文件Index file）</span></a></h3><h2 id="三、-表设计规范" tabindex="-1"><a class="header-anchor" href="#三、-表设计规范"><span>三、 表设计规范</span></a></h2><h3 id="_1、单实例表数目必须小于500" tabindex="-1"><a class="header-anchor" href="#_1、单实例表数目必须小于500"><span>1、单实例表数目必须小于500</span></a></h3><h3 id="_2、单表列数目必须小于30" tabindex="-1"><a class="header-anchor" href="#_2、单表列数目必须小于30"><span>2、单表列数目必须小于30</span></a></h3><h3 id="_3、表必须有主键-例如自增主键" tabindex="-1"><a class="header-anchor" href="#_3、表必须有主键-例如自增主键"><span>3、表必须有主键，例如自增主键</span></a></h3><h3 id="_4、禁止使用外键-如果有外键完整性约束-需要应用程序控制外键会导致表与表之间的耦合-update和delete操作都会涉及相关联的表-影响sql的性能-甚至会造成死锁。高并发情况下容易造成数据库性能-大数据高并发业务场景数据库使用性能优先" tabindex="-1"><a class="header-anchor" href="#_4、禁止使用外键-如果有外键完整性约束-需要应用程序控制外键会导致表与表之间的耦合-update和delete操作都会涉及相关联的表-影响sql的性能-甚至会造成死锁。高并发情况下容易造成数据库性能-大数据高并发业务场景数据库使用性能优先"><span>4、禁止使用外键，如果有外键完整性约束，需要应用程序控制外键会导致表与表之间的耦合，update和delete操作都会涉及相关联的表，影响SQL的性能，甚至会造成死锁。高并发情况下容易造成数据库性能，大数据高并发业务场景数据库使用性能优先</span></a></h3><h3 id="_5、控制单表数据量-单表记录控制在千万级" tabindex="-1"><a class="header-anchor" href="#_5、控制单表数据量-单表记录控制在千万级"><span>5、控制单表数据量，单表记录控制在千万级</span></a></h3><h2 id="四、-字段设计必须规范" tabindex="-1"><a class="header-anchor" href="#四、-字段设计必须规范"><span>四、 字段设计必须规范</span></a></h2><h3 id="_1、必须把字段定义为not-null并且提供默认值" tabindex="-1"><a class="header-anchor" href="#_1、必须把字段定义为not-null并且提供默认值"><span>1、必须把字段定义为NOT NULL并且提供默认值</span></a></h3><blockquote><p>a) null的列使索引/索引统计/值都比较复杂，对MySQL来说更难优化</p><p>b) null这种类型MySQL内部需要进行特殊处理，增加数据库处理记录的复杂性</p></blockquote><h3 id="_2、禁止使用text、blob类型" tabindex="-1"><a class="header-anchor" href="#_2、禁止使用text、blob类型"><span>2、禁止使用TEXT、BLOB类型</span></a></h3><blockquote><p>会浪费更多的磁盘和空间内存，非必要的大量的大字段查询会淘汰掉热数据，导致内存命中率急剧降低，影响数据库的性能。</p></blockquote><h3 id="_3、禁止使用小数存储货币" tabindex="-1"><a class="header-anchor" href="#_3、禁止使用小数存储货币"><span>3、禁止使用小数存储货币</span></a></h3><blockquote><p>使用整数，小数容易导致钱对不上</p></blockquote><h3 id="_4、必须使用varchar-20-存储手机号" tabindex="-1"><a class="header-anchor" href="#_4、必须使用varchar-20-存储手机号"><span>4、必须使用varchar（20）存储手机号</span></a></h3><blockquote><p>a) 涉及到区号或者国家的代号</p><p>b) 手机号会去做数学运算么？</p><p>c) varchar可以支持模糊查询 例如：like”138%”</p></blockquote><h3 id="_5、禁止使用enum-可使用tinyint代替" tabindex="-1"><a class="header-anchor" href="#_5、禁止使用enum-可使用tinyint代替"><span>5、禁止使用ENUM，可使用TINYINT代替</span></a></h3><blockquote><p>a) 增加新的ENUM值要做DDL操作</p><p>b) ENUM的内部实际存储就是整数，你以为自己定义的是字符串？</p></blockquote><h3 id="_6、字段选择类型更小的通常更好-小的数据类型更快-因为它们占用更少的磁盘、内存和cpu缓存-并且处理需要的cpu周期更少" tabindex="-1"><a class="header-anchor" href="#_6、字段选择类型更小的通常更好-小的数据类型更快-因为它们占用更少的磁盘、内存和cpu缓存-并且处理需要的cpu周期更少"><span>6、字段选择类型更小的通常更好：小的数据类型更快，因为它们占用更少的磁盘、内存和CPU缓存，并且处理需要的CPU周期更少</span></a></h3><h2 id="五、-索引设计规范" tabindex="-1"><a class="header-anchor" href="#五、-索引设计规范"><span>五、 索引设计规范</span></a></h2><h3 id="_1、单表索引建议控制在5个内" tabindex="-1"><a class="header-anchor" href="#_1、单表索引建议控制在5个内"><span>1、单表索引建议控制在5个内</span></a></h3><h3 id="_2、单索引字段数不允许草超过5个" tabindex="-1"><a class="header-anchor" href="#_2、单索引字段数不允许草超过5个"><span>2、单索引字段数不允许草超过5个</span></a></h3><blockquote><p>字段超过5个，实际起不到有效过滤数据的作用</p></blockquote><h3 id="_3、禁止在更新十分频繁、区分度不高的属性上建立索引" tabindex="-1"><a class="header-anchor" href="#_3、禁止在更新十分频繁、区分度不高的属性上建立索引"><span>3、禁止在更新十分频繁、区分度不高的属性上建立索引</span></a></h3><blockquote><p>更新会变更B+树，更新频繁的字段建立索引会大大降低数据库性能</p><p>“性别”这种区分度不大的属性，建立索引是没有什么意义的，不能有效过滤数据，性能与全表扫描类似</p></blockquote><h3 id="_4、建立组合索引-必须把区分度高的字段放在前面" tabindex="-1"><a class="header-anchor" href="#_4、建立组合索引-必须把区分度高的字段放在前面"><span>4、建立组合索引，必须把区分度高的字段放在前面</span></a></h3><h3 id="myisam和innodb的区别" tabindex="-1"><a class="header-anchor" href="#myisam和innodb的区别"><span>MyISAM和INNODB的区别</span></a></h3><ol><li><p>事务安全（MyISAM不支持事务，INNODB支持事务）</p></li><li><p>外键MyISAM不支持外键，INNODB支持外键</p></li><li><p>锁机制（MyISAM是表锁，INNODB是行锁）</p></li><li><p>查询和添加速度（MyISAM批量插入速度快）</p></li><li><p>支持全文索引（MyISAM支持全文索引，INNODB不支持全文索引）</p></li><li><p>MyISAM内存空间使用率比INNODB低</p></li></ol><h2 id="六、sql语句优化" tabindex="-1"><a class="header-anchor" href="#六、sql语句优化"><span>六、SQL语句优化</span></a></h2><h3 id="_1、禁止使用select-只获取必要的字段-需要显示说明列属性" tabindex="-1"><a class="header-anchor" href="#_1、禁止使用select-只获取必要的字段-需要显示说明列属性"><span>1、禁止使用select *，只获取必要的字段，需要显示说明列属性</span></a></h3><blockquote><p>a) 读取不需要的列会增加CPU、IO、NET消耗</p><p>b) 不能有效的利用覆盖索引</p><p>c) 使用select *容易在增加或者删除字段后出现程序BUG</p></blockquote><h3 id="_2、禁止使用insert-into-t-xxx-values-xxx-必须显示执行插入的列属性" tabindex="-1"><a class="header-anchor" href="#_2、禁止使用insert-into-t-xxx-values-xxx-必须显示执行插入的列属性"><span>2、禁止使用insert into t_xxx values(xxx)，必须显示执行插入的列属性</span></a></h3><blockquote><p>a) 容易在增加或者删除字段后出现程序BUG</p></blockquote><h3 id="_3、禁止使用属性隐式转换" tabindex="-1"><a class="header-anchor" href="#_3、禁止使用属性隐式转换"><span>3、禁止使用属性隐式转换</span></a></h3><blockquote><p>a) Select uid from t_user where phone=13885236846 会导致全表扫描，而不能命中phone索引</p></blockquote><h3 id="_4、禁止在where条件的属性上使用函数或者表达式-在属性上进行计算不能命中索引" tabindex="-1"><a class="header-anchor" href="#_4、禁止在where条件的属性上使用函数或者表达式-在属性上进行计算不能命中索引"><span>4、禁止在where条件的属性上使用函数或者表达式，在属性上进行计算不能命中索引</span></a></h3><blockquote><p>a) Select uid from t_user where from_unixtime(day)&gt;=’2017-02-15’会导致全表扫描</p><p>b) 正确为：select uid from t_user where day&gt;=unix_timestamp(‘2017-02-15 00:00:00’)</p></blockquote><h3 id="_5、禁止负向查询-以及-开头的模糊查询" tabindex="-1"><a class="header-anchor" href="#_5、禁止负向查询-以及-开头的模糊查询"><span>5、禁止负向查询，以及%开头的模糊查询</span></a></h3><blockquote><p>a) 负向查询条件：NOT、!=、&lt;&gt;、!&lt;、!&gt;、NOT IN、NOT LIKE等，会导致全表扫描</p><p>b) %开头的模糊查询，会导致全表扫描</p></blockquote><h3 id="_6、禁止大表使用join查询-禁止大表使用子查询" tabindex="-1"><a class="header-anchor" href="#_6、禁止大表使用join查询-禁止大表使用子查询"><span>6、禁止大表使用JOIN查询，禁止大表使用子查询</span></a></h3><blockquote><p>a) 会产生临时表，消耗较多的内存与CPU，极大影响数据库性能</p></blockquote><h3 id="_7、禁止使用or条件-必须改为in查询" tabindex="-1"><a class="header-anchor" href="#_7、禁止使用or条件-必须改为in查询"><span>7、禁止使用OR条件，必须改为IN查询</span></a></h3><blockquote><p>a) 旧版本的MySQL的OR查询是不能命中索引的，即使能命中索引，为何要让数据库耗费更多的CPU帮助实施查询优化？</p></blockquote><h3 id="_8、应用程序必须捕获sql异常-并有相应的处理" tabindex="-1"><a class="header-anchor" href="#_8、应用程序必须捕获sql异常-并有相应的处理"><span>8、应用程序必须捕获SQL异常，并有相应的处理</span></a></h3><h3 id="_9、负向条件查询不能使用索引" tabindex="-1"><a class="header-anchor" href="#_9、负向条件查询不能使用索引"><span>9、负向条件查询不能使用索引</span></a></h3><blockquote><p>a) Select * from order where status!=0 and status!=1</p><p>not in/not exists都不是很好的习惯</p><p>可以优化为</p><p>Select * from order where status in(2,3)</p></blockquote><h3 id="_10、前导模糊查询不能用索引" tabindex="-1"><a class="header-anchor" href="#_10、前导模糊查询不能用索引"><span>10、前导模糊查询不能用索引</span></a></h3><blockquote><p>a) Select * from order where desc like ‘%xxx’</p></blockquote><p>而非前导模糊查询则可以：</p><blockquote><p>Select * from order where desc like ‘xxx%’</p></blockquote><h3 id="_11、数据区分度不大的字段不宜使用索引" tabindex="-1"><a class="header-anchor" href="#_11、数据区分度不大的字段不宜使用索引"><span>11、数据区分度不大的字段不宜使用索引</span></a></h3><blockquote><p>a) 能过滤80%数据时就可以使用索引</p></blockquote><h3 id="_12、limit高效分页" tabindex="-1"><a class="header-anchor" href="#_12、limit高效分页"><span>12、limit高效分页</span></a></h3><blockquote><p>a) limit越大，效率越低</p><p>select id from t limit 1000,10 应改为: select id from t where id&gt;1000 limit 10</p></blockquote><h3 id="_13、如果业务大部分是单条查询-使用hash索引性能更好" tabindex="-1"><a class="header-anchor" href="#_13、如果业务大部分是单条查询-使用hash索引性能更好"><span>13、如果业务大部分是单条查询，使用Hash索引性能更好</span></a></h3><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_14、允许为null的列-查询有潜在大坑" tabindex="-1"><a class="header-anchor" href="#_14、允许为null的列-查询有潜在大坑"><span>14、允许为null的列，查询有潜在大坑</span></a></h3><blockquote><p>a) 单列索引不存null值，复合索引不存全为null的值，如果列允许为null，可能会得到“不符合预期”的结果集。</p></blockquote>',83),h=[s];function r(d,c){return l(),a("div",null,h)}const _=e(i,[["render",r],["__file","mysql-setting.html.vue"]]),u=JSON.parse('{"path":"/database/mysql/mysql-setting.html","title":"数据库设计需要注意什么","lang":"zh-CN","frontmatter":{"icon":"mysql","title":"数据库设计需要注意什么","category":["database"],"headerDepth":5,"date":"2019-08-13T00:00:00.000Z","tag":["MySQL"],"description":"数据库设计需要注意哪些规范。","head":[["meta",{"property":"og:url","content":"https://blogres.github.io/database/mysql/mysql-setting.html"}],["meta",{"property":"og:title","content":"数据库设计需要注意什么"}],["meta",{"property":"og:description","content":"数据库设计需要注意哪些规范。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T11:49:35.000Z"}],["meta",{"property":"article:author","content":"blogres"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2019-08-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T11:49:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库设计需要注意什么\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-02T11:49:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"blogres\\",\\"url\\":\\"/article\\"}]}"]]},"headers":[{"level":2,"title":"一、 基础规范","slug":"一、-基础规范","link":"#一、-基础规范","children":[{"level":3,"title":"1、必须使用InnoDB存储引擎","slug":"_1、必须使用innodb存储引擎","link":"#_1、必须使用innodb存储引擎","children":[]},{"level":3,"title":"2、新库默认使用utf8mb4字符集","slug":"_2、新库默认使用utf8mb4字符集","link":"#_2、新库默认使用utf8mb4字符集","children":[]},{"level":3,"title":"3、数据表、数据字段必须加中文注释","slug":"_3、数据表、数据字段必须加中文注释","link":"#_3、数据表、数据字段必须加中文注释","children":[]},{"level":3,"title":"4、禁止使用存储过程、视图、触发器、Event","slug":"_4、禁止使用存储过程、视图、触发器、event","link":"#_4、禁止使用存储过程、视图、触发器、event","children":[]},{"level":3,"title":"5、禁止存储大文件或者大照片","slug":"_5、禁止存储大文件或者大照片","link":"#_5、禁止存储大文件或者大照片","children":[]},{"level":3,"title":"6、禁止使用应用程序配置文件内的账号手工访问线上数据库","slug":"_6、禁止使用应用程序配置文件内的账号手工访问线上数据库","link":"#_6、禁止使用应用程序配置文件内的账号手工访问线上数据库","children":[]},{"level":3,"title":"7、禁止非DBA对线上数据库进行写操作，修改线上数据需要提交工单，由DBA执行，提交的SQL语句必须经过测试","slug":"_7、禁止非dba对线上数据库进行写操作-修改线上数据需要提交工单-由dba执行-提交的sql语句必须经过测试","link":"#_7、禁止非dba对线上数据库进行写操作-修改线上数据需要提交工单-由dba执行-提交的sql语句必须经过测试","children":[]},{"level":3,"title":"8、分配非DBA以只读账号，必须通过VPN+跳板机访问授权的从库","slug":"_8、分配非dba以只读账号-必须通过vpn-跳板机访问授权的从库","link":"#_8、分配非dba以只读账号-必须通过vpn-跳板机访问授权的从库","children":[]},{"level":3,"title":"9、开发、测试、线上环境隔离","slug":"_9、开发、测试、线上环境隔离","link":"#_9、开发、测试、线上环境隔离","children":[]},{"level":3,"title":"10、不在数据库做计算，cpu计算务必移至业务层","slug":"_10、不在数据库做计算-cpu计算务必移至业务层","link":"#_10、不在数据库做计算-cpu计算务必移至业务层","children":[]},{"level":3,"title":"11、平衡范式与冗余，为提高效率可以牺牲范式设计，冗余数据","slug":"_11、平衡范式与冗余-为提高效率可以牺牲范式设计-冗余数据","link":"#_11、平衡范式与冗余-为提高效率可以牺牲范式设计-冗余数据","children":[]},{"level":3,"title":"12、拒绝3B，大SQL，大事务，大批量","slug":"_12、拒绝3b-大sql-大事务-大批量","link":"#_12、拒绝3b-大sql-大事务-大批量","children":[]}]},{"level":2,"title":"二、 命名规范","slug":"二、-命名规范","link":"#二、-命名规范","children":[{"level":3,"title":"1、只允许使用内网域名，而不是ip连接数据库","slug":"_1、只允许使用内网域名-而不是ip连接数据库","link":"#_1、只允许使用内网域名-而不是ip连接数据库","children":[]},{"level":3,"title":"2、库名、表名、字段名：小写，下划线风格，不超过32个字符，禁止拼音英文混用","slug":"_2、库名、表名、字段名-小写-下划线风格-不超过32个字符-禁止拼音英文混用","link":"#_2、库名、表名、字段名-小写-下划线风格-不超过32个字符-禁止拼音英文混用","children":[]},{"level":3,"title":"3、表名t_xxx，非唯一索引名idx_xxx，唯一索引名uniq_xxx（idx：索引文件Index file）","slug":"_3、表名t-xxx-非唯一索引名idx-xxx-唯一索引名uniq-xxx-idx-索引文件index-file","link":"#_3、表名t-xxx-非唯一索引名idx-xxx-唯一索引名uniq-xxx-idx-索引文件index-file","children":[]}]},{"level":2,"title":"三、 表设计规范","slug":"三、-表设计规范","link":"#三、-表设计规范","children":[{"level":3,"title":"1、单实例表数目必须小于500","slug":"_1、单实例表数目必须小于500","link":"#_1、单实例表数目必须小于500","children":[]},{"level":3,"title":"2、单表列数目必须小于30","slug":"_2、单表列数目必须小于30","link":"#_2、单表列数目必须小于30","children":[]},{"level":3,"title":"3、表必须有主键，例如自增主键","slug":"_3、表必须有主键-例如自增主键","link":"#_3、表必须有主键-例如自增主键","children":[]},{"level":3,"title":"4、禁止使用外键，如果有外键完整性约束，需要应用程序控制外键会导致表与表之间的耦合，update和delete操作都会涉及相关联的表，影响SQL的性能，甚至会造成死锁。高并发情况下容易造成数据库性能，大数据高并发业务场景数据库使用性能优先","slug":"_4、禁止使用外键-如果有外键完整性约束-需要应用程序控制外键会导致表与表之间的耦合-update和delete操作都会涉及相关联的表-影响sql的性能-甚至会造成死锁。高并发情况下容易造成数据库性能-大数据高并发业务场景数据库使用性能优先","link":"#_4、禁止使用外键-如果有外键完整性约束-需要应用程序控制外键会导致表与表之间的耦合-update和delete操作都会涉及相关联的表-影响sql的性能-甚至会造成死锁。高并发情况下容易造成数据库性能-大数据高并发业务场景数据库使用性能优先","children":[]},{"level":3,"title":"5、控制单表数据量，单表记录控制在千万级","slug":"_5、控制单表数据量-单表记录控制在千万级","link":"#_5、控制单表数据量-单表记录控制在千万级","children":[]}]},{"level":2,"title":"四、 字段设计必须规范","slug":"四、-字段设计必须规范","link":"#四、-字段设计必须规范","children":[{"level":3,"title":"1、必须把字段定义为NOT NULL并且提供默认值","slug":"_1、必须把字段定义为not-null并且提供默认值","link":"#_1、必须把字段定义为not-null并且提供默认值","children":[]},{"level":3,"title":"2、禁止使用TEXT、BLOB类型","slug":"_2、禁止使用text、blob类型","link":"#_2、禁止使用text、blob类型","children":[]},{"level":3,"title":"3、禁止使用小数存储货币","slug":"_3、禁止使用小数存储货币","link":"#_3、禁止使用小数存储货币","children":[]},{"level":3,"title":"4、必须使用varchar（20）存储手机号","slug":"_4、必须使用varchar-20-存储手机号","link":"#_4、必须使用varchar-20-存储手机号","children":[]},{"level":3,"title":"5、禁止使用ENUM，可使用TINYINT代替","slug":"_5、禁止使用enum-可使用tinyint代替","link":"#_5、禁止使用enum-可使用tinyint代替","children":[]},{"level":3,"title":"6、字段选择类型更小的通常更好：小的数据类型更快，因为它们占用更少的磁盘、内存和CPU缓存，并且处理需要的CPU周期更少","slug":"_6、字段选择类型更小的通常更好-小的数据类型更快-因为它们占用更少的磁盘、内存和cpu缓存-并且处理需要的cpu周期更少","link":"#_6、字段选择类型更小的通常更好-小的数据类型更快-因为它们占用更少的磁盘、内存和cpu缓存-并且处理需要的cpu周期更少","children":[]}]},{"level":2,"title":"五、 索引设计规范","slug":"五、-索引设计规范","link":"#五、-索引设计规范","children":[{"level":3,"title":"1、单表索引建议控制在5个内","slug":"_1、单表索引建议控制在5个内","link":"#_1、单表索引建议控制在5个内","children":[]},{"level":3,"title":"2、单索引字段数不允许草超过5个","slug":"_2、单索引字段数不允许草超过5个","link":"#_2、单索引字段数不允许草超过5个","children":[]},{"level":3,"title":"3、禁止在更新十分频繁、区分度不高的属性上建立索引","slug":"_3、禁止在更新十分频繁、区分度不高的属性上建立索引","link":"#_3、禁止在更新十分频繁、区分度不高的属性上建立索引","children":[]},{"level":3,"title":"4、建立组合索引，必须把区分度高的字段放在前面","slug":"_4、建立组合索引-必须把区分度高的字段放在前面","link":"#_4、建立组合索引-必须把区分度高的字段放在前面","children":[]},{"level":3,"title":"MyISAM和INNODB的区别","slug":"myisam和innodb的区别","link":"#myisam和innodb的区别","children":[]}]},{"level":2,"title":"六、SQL语句优化","slug":"六、sql语句优化","link":"#六、sql语句优化","children":[{"level":3,"title":"1、禁止使用select *，只获取必要的字段，需要显示说明列属性","slug":"_1、禁止使用select-只获取必要的字段-需要显示说明列属性","link":"#_1、禁止使用select-只获取必要的字段-需要显示说明列属性","children":[]},{"level":3,"title":"2、禁止使用insert into t_xxx values(xxx)，必须显示执行插入的列属性","slug":"_2、禁止使用insert-into-t-xxx-values-xxx-必须显示执行插入的列属性","link":"#_2、禁止使用insert-into-t-xxx-values-xxx-必须显示执行插入的列属性","children":[]},{"level":3,"title":"3、禁止使用属性隐式转换","slug":"_3、禁止使用属性隐式转换","link":"#_3、禁止使用属性隐式转换","children":[]},{"level":3,"title":"4、禁止在where条件的属性上使用函数或者表达式，在属性上进行计算不能命中索引","slug":"_4、禁止在where条件的属性上使用函数或者表达式-在属性上进行计算不能命中索引","link":"#_4、禁止在where条件的属性上使用函数或者表达式-在属性上进行计算不能命中索引","children":[]},{"level":3,"title":"5、禁止负向查询，以及%开头的模糊查询","slug":"_5、禁止负向查询-以及-开头的模糊查询","link":"#_5、禁止负向查询-以及-开头的模糊查询","children":[]},{"level":3,"title":"6、禁止大表使用JOIN查询，禁止大表使用子查询","slug":"_6、禁止大表使用join查询-禁止大表使用子查询","link":"#_6、禁止大表使用join查询-禁止大表使用子查询","children":[]},{"level":3,"title":"7、禁止使用OR条件，必须改为IN查询","slug":"_7、禁止使用or条件-必须改为in查询","link":"#_7、禁止使用or条件-必须改为in查询","children":[]},{"level":3,"title":"8、应用程序必须捕获SQL异常，并有相应的处理","slug":"_8、应用程序必须捕获sql异常-并有相应的处理","link":"#_8、应用程序必须捕获sql异常-并有相应的处理","children":[]},{"level":3,"title":"9、负向条件查询不能使用索引","slug":"_9、负向条件查询不能使用索引","link":"#_9、负向条件查询不能使用索引","children":[]},{"level":3,"title":"10、前导模糊查询不能用索引","slug":"_10、前导模糊查询不能用索引","link":"#_10、前导模糊查询不能用索引","children":[]},{"level":3,"title":"11、数据区分度不大的字段不宜使用索引","slug":"_11、数据区分度不大的字段不宜使用索引","link":"#_11、数据区分度不大的字段不宜使用索引","children":[]},{"level":3,"title":"12、limit高效分页","slug":"_12、limit高效分页","link":"#_12、limit高效分页","children":[]},{"level":3,"title":"13、如果业务大部分是单条查询，使用Hash索引性能更好","slug":"_13、如果业务大部分是单条查询-使用hash索引性能更好","link":"#_13、如果业务大部分是单条查询-使用hash索引性能更好","children":[]},{"level":3,"title":"14、允许为null的列，查询有潜在大坑","slug":"_14、允许为null的列-查询有潜在大坑","link":"#_14、允许为null的列-查询有潜在大坑","children":[]}]}],"git":{"createdTime":1706536810000,"updatedTime":1706874575000,"contributors":[{"name":"topjfy","email":"topjfk@163.com","commits":2}]},"readingTime":{"minutes":6.7,"words":2010},"filePathRelative":"database/mysql/mysql-setting.md","localizedDate":"2019年8月13日","excerpt":"<p>数据库设计需要注意哪些规范。</p>\\n","autoDesc":true}');export{_ as comp,u as data};
