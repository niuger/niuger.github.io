import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-D1uezr0R.js";const p={},e=t(`<p>SpringBoot图片大小压缩</p><h1 id="使用java压缩图片大小" tabindex="-1"><a class="header-anchor" href="#使用java压缩图片大小"><span>使用Java压缩图片大小</span></a></h1><p>application.properties配置文件</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>#后端接收图片大小
spring<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>max<span class="token operator">-</span>file<span class="token operator">-</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token constant">MB</span>
spring<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>max<span class="token operator">-</span>request<span class="token operator">-</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token constant">MB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java工具类" tabindex="-1"><a class="header-anchor" href="#java工具类"><span>java工具类</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span></span><span class="token class-name">ImageIO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferedImage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">ImageObserver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token operator">/</span>
<span class="token doc-comment comment">/**
     * 请求调用方法
     * gb
     *
     * <span class="token keyword">@param</span> <span class="token parameter">fromPath1</span> byte直接文件图片
     * <span class="token keyword">@return</span> 剪切后的byte文件
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">imageSet</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fromPath1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">imageChangeSize</span><span class="token punctuation">(</span>fromPath1<span class="token punctuation">,</span> <span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">635</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">data</span>   byte类型图片
     * <span class="token keyword">@param</span> <span class="token parameter">max_wi</span> 图片修改后最大的宽
     * <span class="token keyword">@param</span> <span class="token parameter">max_he</span> 图片修改后最大的高
     * <span class="token keyword">@return</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
     * @Description 更改图片内容的大小 byte【】 类型
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">imageChangeSize</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">,</span> <span class="token keyword">int</span> max_wi<span class="token punctuation">,</span> <span class="token keyword">int</span> max_he<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">ImageIO</span> io <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> rate <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">/*图片的原始宽 120*/</span>
        <span class="token keyword">int</span> oldwi<span class="token punctuation">;</span>
        <span class="token comment">/*图片的原始高 120*/</span>
        <span class="token keyword">int</span> oldhe<span class="token punctuation">;</span>
        <span class="token comment">/*图片修改后的宽 0*/</span>
        <span class="token keyword">int</span> new_wi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">/*图片修改后的高 0*/</span>
        <span class="token keyword">int</span> new_he <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">/*拿到byte图片*/</span>
        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BufferedImage</span> bufImg <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*图片的原始宽度*/</span>
        oldwi <span class="token operator">=</span> bufImg<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*图片的原始高度*/</span>
        oldhe <span class="token operator">=</span> bufImg<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//</span>
        rate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> oldwi <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> oldhe<span class="token punctuation">;</span>
        <span class="token comment">/*如果图片的原宽大于最大宽度，并且原高小于等于最大高度。则证明图片过宽了，将图片宽度设置为最大宽度，此时需要等比例减小高度*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldwi <span class="token operator">&gt;</span> max_wi <span class="token operator">&amp;&amp;</span> oldhe <span class="token operator">&lt;=</span> max_he<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            new_wi <span class="token operator">=</span> max_wi<span class="token punctuation">;</span>
            new_he <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Float</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> new_wi <span class="token operator">/</span> rate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/*如果图片的原宽和原高都大于或者都小于其所对应的最大值，则以任意一方为主(此处以最大高度为主)*/</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldwi <span class="token operator">&gt;=</span> max_wi <span class="token operator">&amp;&amp;</span> oldhe <span class="token operator">&gt;=</span> max_he <span class="token operator">||</span> oldwi <span class="token operator">&lt;=</span> max_wi <span class="token operator">&amp;&amp;</span> oldhe <span class="token operator">&lt;=</span> max_he<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            new_he <span class="token operator">=</span> max_he<span class="token punctuation">;</span>
            new_wi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Float</span><span class="token punctuation">(</span>new_he <span class="token operator">*</span> rate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/*如果图片的原宽小于于最大宽度，并且原高大于等于最大高度。则证明图片过高了，将图片宽度设置为最大高度，此时需要等比例减小宽度*/</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldwi <span class="token operator">&lt;=</span> max_wi <span class="token operator">&amp;&amp;</span> oldhe <span class="token operator">&gt;</span> max_he<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            new_he <span class="token operator">=</span> max_he<span class="token punctuation">;</span>
            new_wi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Float</span><span class="token punctuation">(</span>new_he <span class="token operator">*</span> rate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token comment">//        System.err.println(&quot;原宽度：&quot; + oldwi + &quot;原高度：&quot; + oldhe + &quot;_&quot; + rate);</span>
        <span class="token comment">/*开始改变大小*/</span>
        <span class="token class-name">ImageObserver</span> ser <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">BufferedImage</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>new_wi<span class="token punctuation">,</span> new_he<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token constant">TYPE_INT_RGB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bf<span class="token punctuation">.</span><span class="token function">getGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>bufImg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> new_wi<span class="token punctuation">,</span> new_he<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        System.err.println(&quot;新宽度：&quot; + bf.getWidth() + &quot;-&quot; + &quot;新高度：&quot; + bf.getHeight());</span>
        <span class="token class-name">ByteArrayOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//转换编码格式JPEG</span>
        <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bf<span class="token punctuation">,</span> <span class="token string">&quot;jpeg&quot;</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> re <span class="token operator">=</span> out<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//logger.info(&quot;【图片剪切】| 图片原大小={}kb | 压缩后大小={}kb&quot;, (data.length / 1024), (re.length / 1024));</span>
        <span class="token keyword">return</span> re<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="controller" tabindex="-1"><a class="header-anchor" href="#controller"><span>controller</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/getImage&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">JsonData</span> <span class="token function">getidcart</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;front&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> front<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">IdCartFront</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         *  图片字节
         *  判断压缩 &gt;300kb就压缩到300kb以下 300000k=300kb 设置宽高px---&gt;转小kb
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>front<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">SIZE_DEFUALT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">IdCartFront</span> <span class="token operator">=</span> <span class="token class-name">ImageUtils</span><span class="token punctuation">.</span><span class="token function">imageSet</span><span class="token punctuation">(</span>front<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">IdCartFront</span> <span class="token operator">=</span> front<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="html部分" tabindex="-1"><a class="header-anchor" href="#html部分"><span>HTML部分</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;photo&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;photo&quot;</span> enctype<span class="token operator">=</span><span class="token string">&quot;multipart/form-data&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;file&quot;</span> multiple<span class="token operator">=</span><span class="token string">&quot;multiple&quot;</span> accept<span class="token operator">=</span><span class="token string">&quot;image/*&quot;</span>
                       onchange<span class="token operator">=</span><span class="token string">&quot;getImg(event,&#39;photo&#39;,1)&quot;</span> enctype<span class="token operator">=</span><span class="token string">&quot;multipart/form-data&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;face&quot;</span> required<span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript部分" tabindex="-1"><a class="header-anchor" href="#javascript部分"><span>JavaScript部分</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/** 获取照片 */</span>
function <span class="token function">getImg</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> eId<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> imgFile <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> newImgFile <span class="token operator">=</span> window<span class="token punctuation">.</span>webkitURL<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>imgFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> eId <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token string">&quot;url(&quot;</span> <span class="token operator">+</span> newImgFile <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        front <span class="token operator">=</span> imgFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        back <span class="token operator">=</span> imgFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        face <span class="token operator">=</span> imgFile<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//ajax：</span>
<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
<span class="token comment">//将file文件转为formdata,Ajax传到后台</span>
    formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;front&#39;</span><span class="token punctuation">,</span> front<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
        url<span class="token operator">:</span> url<span class="token punctuation">,</span>
            type<span class="token operator">:</span> <span class="token char">&#39;POST&#39;</span><span class="token punctuation">,</span>
            cache<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> formData<span class="token punctuation">,</span>
            processData<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            contentType<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","img-compression.html.vue"]]),d=JSON.parse('{"path":"/java/img-compression.html","title":"SpringBoot图片大小压缩","lang":"zh-CN","frontmatter":{"icon":"java","title":"SpringBoot图片大小压缩","category":["Java"],"headerDepth":5,"date":"2020-09-29T00:00:00.000Z","tag":["image"],"description":"SpringBoot图片大小压缩","head":[["meta",{"property":"og:url","content":"https://blogres.github.io/java/img-compression.html"}],["meta",{"property":"og:title","content":"SpringBoot图片大小压缩"}],["meta",{"property":"og:description","content":"SpringBoot图片大小压缩"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T11:49:35.000Z"}],["meta",{"property":"article:author","content":"blogres"}],["meta",{"property":"article:tag","content":"image"}],["meta",{"property":"article:published_time","content":"2020-09-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T11:49:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot图片大小压缩\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-02T11:49:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"blogres\\",\\"url\\":\\"/article\\"}]}"]]},"headers":[{"level":2,"title":"java工具类","slug":"java工具类","link":"#java工具类","children":[]},{"level":2,"title":"controller","slug":"controller","link":"#controller","children":[]},{"level":2,"title":"HTML部分","slug":"html部分","link":"#html部分","children":[]},{"level":2,"title":"JavaScript部分","slug":"javascript部分","link":"#javascript部分","children":[]}],"git":{"createdTime":1706536810000,"updatedTime":1706874575000,"contributors":[{"name":"topjfy","email":"topjfk@163.com","commits":2}]},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"java/img-compression.md","localizedDate":"2020年9月29日","excerpt":"<p>SpringBoot图片大小压缩</p>\\n","autoDesc":true}');export{k as comp,d as data};
